// Code generated by mockery v2.53.2. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// Matcher is an autogenerated mock type for the Matcher type
type Matcher struct {
	mock.Mock
}

// Expected provides a mock function with no fields
func (_m *Matcher) Expected() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Expected")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Match provides a mock function with given fields: actual
func (_m *Matcher) Match(actual interface{}) (bool, error) {
	ret := _m.Called(actual)

	if len(ret) == 0 {
		panic("no return value specified for Match")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(interface{}) (bool, error)); ok {
		return rf(actual)
	}
	if rf, ok := ret.Get(0).(func(interface{}) bool); ok {
		r0 = rf(actual)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(actual)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMatcher creates a new instance of Matcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMatcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *Matcher {
	mock := &Matcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
